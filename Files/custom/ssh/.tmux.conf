#############################
########## Bindings
#############################
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
set -g visual-bell on
set -g set-clipboard on
set-option -g default-shell /bin/bash
set -sg escape-time 50
## Clipboard integration
# ctrl+c to send to clipboard
set -g default-terminal 'tmux-256color' # replace this with your custom term-info name
#set -g default-terminal 'screen-256color' # replace this with your custom term-info name
#set -ga terminal-overrides ',*:Tc' # this is for 256 color
#set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q' # this is for the cursor shape
#set -ga terminal-overrides ",*256col*:Tc"
#set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q',w
#set -g terminal-overrides "xterm*:XT"
set-hook -g pane-mode-changed 'if -F "#{pane_in_mode}" "selectp -P bg=black" "selectp -P bg=default"'
#unbind Escape
#unbind -T root Esccpe
bind -T copy-mode Space \
    send -X copy-pipe-and-cancel 'tmux save-buffer - | sed -z "s/\n/\r\n/" | clip.exe'
#bind -T copy-mode Esc \
#    send -X copy-pipe-and-cancel "tmux save-buffer - | xclip -in -selection clipboard > /dev/null" 
bind -T copy-mode Enter \
    send -X copy-pipe-and-cancel 'tmux save-buffer - | sed -z "s/\n/\r\n/" | clip.exe'
bind -T copy-mode C-c \
    send -X copy-pipe-and-cancel 'tmux save-buffer - | sed -z "s/\n/\r\n/" | clip.exe'
# ctrl+v to paste from clipboard
#bind C-v run "tmux set-buffer \"$(cat /dev/clipboard)\"; tmux paste-buffer"

# Selection with mouse should copy to clipboard right away, in addition to the default action.
#unbind -T root MouseDrag1Pane
# unbind - MouseDown1Pane
#bind -T root MouseDown1Pane copy-mode; select-pane ; send -X begin-selection
unbind -T copy-mode MouseDragEnd1Pane
bind -T copy-mode  MouseDragEnd1Pane \
    send -X copy-pipe-and-cancel 'tmux save-buffer - | sed -z "s/\n/\r\n/" | clip.exe'
bind-key -T prefix C-a last-window

# Drag to re-order windows
bind-key -n MouseDown3Status command-prompt  "move-window -t '%%:'"
bind-key -n MouseDrag1Status swap-window -t=

# Double click on the window list to open a new window
bind-key -n DoubleClick1Status new-window


# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on
set-option -g set-titles-string "#S:#I:#W #T #{session_alerts}"
set-option -g mouse on
bind -n WheelUpPane copy-mode
#set-window-option -g exit-copy-past-bottom on

# Switch betewen panes using alt + arrow
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Use shift + arrow key to move between windows in a session
bind -n S-Left  previous-window
bind -n S-Right next-window

# Use m to toggle mouse mode
unbind m
bind m setw mouse

# Use a to toggle synchronize panes
bind a set-window-option synchronize-panes

# Prefix + / to search
bind-key / copy-mode \; send-key ?


# Setup 'v' to begin selection, just like Vim
bind-key -T copy-mode-vi 'v' send -X begin-selection

 # Setup 'y' to yank (copy), just like Vim
#bind-key -T copy-mode-vi Esacpe send -X cancel
#bind-key -T copy-mode Esacpe send -X cancel
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle

#############################
########## Settings
#############################

# Refresh status line every 5 seconds - Good for when music is playing / update time etc
set -g status-interval 5

# Start window and pane indices at 1.
set -g base-index 1
set -g pane-base-index 0

# Length of tmux status line
set -g status-left-length 30
set -g status-right-length 150

set-option -g status "on"

# Default statusbar color
set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1

# Default window title colors
set-window-option -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1

# Default window with an activity alert
set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3

# Active window title colors
set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1

# Set active pane border color
set-option -g pane-active-border-style fg=colour214

# Set inactive pane border color
set-option -g pane-border-style fg=colour239

# Message info
set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1

# Writing commands inactive
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1
set-option -g allow-rename on

# Pane number display
set-option -g display-panes-active-colour colour1 #fg2
set-option -g display-panes-colour colour237 #bg1
# Selection with mouse should copy to clipboard right away, in addition to the default action.
set-window-option -g clock-mode-colour colour109 #blue
#set -s pane-border-status bottom
set -g pane-border-format "#P: #{pane_current_command}"
# Bell
set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg

set-option -g status-left "\
#[fg=colour7, bg=colour241]#{?client_prefix,#[bg=colour167],} #S \
#[fg=colour241, bg=colour237]#{?client_prefix,#[fg=colour167],}"

set-option -g status-right "\
#[fg=colour246, bg=colour237]  %b %d %y\
#[fg=colour109]  %H:%M \
#[fg=colour248, bg=colour239]"

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
#bind-key -T root DoubleClick1Pane \
#    select-pane \; \
#    copy-mode -M \; \
#    send -X select-word \; \
#    run "sleep .5" \; \
#    send -X copy-pipe-and-cancel 'tmux save-buffer - | sed -z "s/\n/\r\n/" | clip.exe'
#bind-key -T copy-mode DoubleClick1Pane \
#    select-pane \; \
#    copy-mode -M \; \
#    send -X select-word \; \
#    run "sleep .5" \; \
#    send -X copy-pipe-and-cancel 'tmux save-buffer - | sed -z "s/\n/\r\n/" | clip.exe'
#bind-key -T copy-mode-vi DoubleClick1Pane \
#    select-pane \; \
#    copy-mode -M \; \
#    send -X select-word \; \
#    run "sleep .5" \; \
#    send -X copy-pipe-and-cancel 'tmux save-buffer - | sed -z "s/\n/\r\n/" | clip.exe'
#
set-window-option -g window-status-current-format "\
#[fg=colour239, bg=colour214] #I \
#[fg=colour239, bg=colour214] #W \
#[fg=colour214, bg=colour237]"

set-window-option -g window-status-format "\
#[fg=colour223,bg=colour239] #I \
#[fg=colour223, bg=colour239] #W \
#[fg=colour239, bg=colour237]"

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
# Set the history limit so we get lots of scrollback.
setw -g history-limit 50000000

#############################
############# Tmux Vars
#############################

# $(echo $USER) - shows the current username
# %a --> Day of week (Mon)
# %A --> Day of week Expanded (Monday)

# %b --> Month (Jan)
# %d --> Day (31)
# %Y --> Year (2017)

# %D --> Month/Day/Year (12/31/2017)
# %v --> Day-Month-Year (31-Dec-2017)

# %r --> Hour:Min:Sec AM/PM (12:30:27 PM)
# %T --> 24 Hour:Min:Sec (16:30:27)
# %X --> Hour:Min:Sec (12:30:27)
# %R --> 24 Hour:Min (16:30)
# %H --> 24 Hour (16)
# %l --> Hour (12)
# %M --> Mins (30)
# %S --> Seconds (09)
# %p --> AM/PM (AM)

# For a more complete list view: https://linux.die.net/man/3/strftime

#colour0 (black)
#colour1 (red)
#colour2 (green)
#colour3 (yellow)
#colour4 (blue)
#colour7 (white)
#colour5 colour6 colour7 colour8 colour9 colour10 colour11 colour12 colour13 colour14 colour15 colour16 colour17

#D ()
#F ()
#H (hostname)
#I (window index)
#P ()
#S (session index)
#T (pane title)
#W (currnet task like vim if editing a file in vim or zsh if running zsh)

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

unbind-key MouseDown2Pane
#bind-key -n MouseDown2Pane run "/home/${USER}/test.sh && tmux paste-buffer"
#bind-key -n MouseDown2Pane run "powershell.exe -Command Get-Clipboard | sed -z 's/\r\n/\n/g; $ s/\n$//' | tmux load-buffer -" \; display-menu -T 'Paste?' -x P -y P yes y paste-buffer no n ''
bind-key -n MouseDown2Pane run '~/custom/paste.sh' \;  choose-buffer
#bind-key -n MouseDown2Pane choose-buffer

set-option -g default-command "/usr/bin/zsh"
#bind-key -n DoubleClick3Pane new-window  "#{pane_start_command}"
