# Inspired by https://github.com/samoshkin/tmux-config/blob/master/tmux/tmux.conf

# Options

# Load a theme
source-file $CONFIG_LOCATION/tmux/colors-light.conf
# source-file $CONFIG_LOCATION/tmux/colors-dark.conf

# ===========================
# Alias Legend
# ===========================

# bind => bind-key
# unbind => unbind-key
# set => set-option
# setw => set-option -w / set-window-option
#   Hierarchy: Server (-s) => Session () => Window (-w) => Pane (-p)
#   Other parameters: Append (-a), only set if not already set (-o), quiet errors (-q), global setting (-g)

# ===========================
# General
# ===========================

setw -gq utf8 on
setw -gq xterm-keys on       # Support for certain key sequences, e.g. arrow keys, or other special keys
set -gq default-terminal "tmux-256color" # Enables UTF-8 support for the terminal
set -ga terminal-overrides ",xterm-256color:RGB"
set -g mouse on             # Allows mouse events to be bound as keys
setw -g mouse on
set -g monitor-bell on
set -g visual-bell on       # Flash screen instead of beep on error
set -g set-clipboard on     # Allows copy from tmux -> other applications
set -g remain-on-exit off   # Automatically close when last process in window exits
set -g focus-events on      # Allows applications behind tmux to trigger events when they lose/gain focus
set -g default-shell /bin/zsh # Since tmux is opened from .bashrc, set shell to something else to avoid infinite loop

# ===========================
# Settings
# ===========================

set -g history-limit 50000000   # Set the history limit so we get lots of scrollback.
set -g buffer-limit 20          # Limit the number of items that tmux can hold in its internal buffer when copying/pasting
set -sg escape-time 0           # Time tmux waits to determine whether a key sequence is part of a multi-key command
set -g display-time 1500        # Time to display status line messages (time in milliseconds)

# ===========================
# Bindings
# ===========================

# Unbind previous binds, then redefine for this session
unbind m
unbind C-b
unbind -n WheelUpPane
unbind -n MouseDown2Pane
unbind -T prefix p
unbind -T copy-mode MouseDragEnd1Pane

# split panes using | and -
unbind '"'
unbind %
bind | split-window -h
bind - split-window -v

# Use m to toggle mouse mode
bind m setw mouse

# Use a to toggle synchronize panes
bind a setw synchronize-panes

bind -T copy-mode Space \
    send -X copy-pipe-and-cancel 'tmux save-buffer - | powershell.exe -noprofile -command "chcp 65001 >\$null; clip.exe"'
bind -T copy-mode Enter \
    send -X copy-pipe-and-cancel 'tmux save-buffer - | powershell.exe -noprofile -command "chcp 65001 >\$null; clip.exe"'
bind -T copy-mode C-c \
    send -X copy-pipe-and-cancel 'tmux save-buffer - | powershell.exe -noprofile -command "chcp 65001 >\$null; clip.exe"'

# Preserve special UTF-8 chars (emojis) while copy-pasting via powershell command
bind -T copy-mode MouseDragEnd1Pane \
    send -X copy-pipe-and-cancel 'tmux save-buffer - | powershell.exe -noprofile -command "chcp 65001 >\$null; clip.exe"'

# Right-click a window tab, and type a new index to switch with
bind -n MouseDown3Status command-prompt  "move-window -t '%%:'"

# Drag to re-order windows
bind -n MouseDrag1Status swap-window -t=

# Double click on the window list to open a new window
bind -n DoubleClick1Status new-window

# Switch between panes using alt + arrow
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
bind -T prefix p choose-buffer

# Kill pane/window/session shortcuts
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

# Prefix + / to search
bind / copy-mode \; send-key ?

# Select/Copy like vim
bind -T copy-mode v send -X begin-selection
bind -T copy-mode y send -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode V send -X select-line
bind -T copy-mode r send -X rectangle-toggle
# Move around like vim
bind -T copy-mode h send Left
bind -T copy-mode j send Down
bind -T copy-mode k send Up
bind -T copy-mode l send Right

# if-shell -F "#{@ssh-connected}": If open ssh connection exists (set/unset in myssh.py) => pass-through to remote; otherwise execute command
bind -n MouseDown1Pane if-shell -F "#{@ssh-connected}" \
    'send-keys -M' \
    ''

bind -n DoubleClick1Pane if-shell -F "#{@ssh-connected}" \
    'send-keys -M' \
    ''

# Mouse scroll up to search
bind -n WheelUpPane if-shell -F "#{@ssh-connected}" \
    'send-keys -M' \
    'copy-mode -e'

# Selection with mouse should copy to clipboard right away, in addition to the default action.
bind -T root MouseDrag1Pane if-shell -F "#{@ssh-connected}" \
    'send-keys -M' \
    'copy-mode -M'

# Middle-Mouse click => import latest clipboard entry from windows clipboard
bind -n MouseDown2Pane run '$CONFIG_LOCATION/scripts/paste.sh'

# bind -n DoubleClick3Pane new-window  "#{pane_start_command}"

# ===========================
# LOCAL
# ===========================

# Includes:
# Set Prefix
# Bind separate shortcut (Legend: C=CTRL, S=Shift, Cursor) to move between windows
if-shell 'test -z "$SSH_CLIENT"' ' \
  set -g prefix C-b; \
  bind C-b send-prefix; \
  bind -n C-S-Left previous-window; \
  bind -n C-S-Right next-window; \
'

# ===========================
# REMOTE (=> connected via ssh)
# ===========================

if-shell 'test -n "$SSH_CLIENT"' ' \
  set -g prefix C-a; \
  bind C-a send-prefix; \
  bind -n S-Left previous-window; \
  bind -n S-Right next-window; \
'

# ========I===================
# Displayed data
# ===========================

# Refresh status line every 5 seconds - Good for when music is playing / update time etc
set -g status-interval 5

# Start window and pane indices at 1 instead of 0.
set -g base-index 1
set -g pane-base-index 1

# Length of tmux status line
set -g status-left-length 30
set -g status-right-length 150

# Automatically set window title
set -g allow-rename on
setw -g automatic-rename on

set -g set-titles on
set -g set-titles-string "#{session_alerts}"

# Others
set -g pane-border-format "#P: #{pane_current_command}"

# ===========================
# Design
# ===========================

source-file $CONFIG_LOCATION/tmux/style.conf

# ===========================
# Hooks
# ===========================

# Check if tmux supports -d (duration) in display-message, then displays text "Bell" or does nothing
if-shell '[ "$(tmux -V | cut -d" " -f2)" \< "3.2" ]' \
  'set-hook -g alert-bell "display-message \"Bell\""' \
  'set-hook -g alert-bell "display-message -d 200 \"Bell\""'

set-hook -g pane-mode-changed 'if -F "#{pane_in_mode}" "selectp -P bg=black" "selectp -P bg=default"'

# setw -g exit-copy-past-bottom on

# ===========================
# Tmux Vars
# ===========================

# $(echo $USER) - shows the current username
# %a --> Day of week (Mon)
# %A --> Day of week Expanded (Monday)

# %b --> Month (Jan)
# %d --> Day (31)
# %Y --> Year (2017)

# %D --> Month/Day/Year (12/31/2017)
# %v --> Day-Month-Year (31-Dec-2017)

# %r --> Hour:Min:Sec AM/PM (12:30:27 PM)
# %T --> 24 Hour:Min:Sec (16:30:27)
# %X --> Hour:Min:Sec (12:30:27)
# %R --> 24 Hour:Min (16:30)
# %H --> 24 Hour (16)
# %l --> Hour (12)
# %M --> Mins (30)
# %S --> Seconds (09)
# %p --> AM/PM (AM)

# For a more complete list view: https://linux.die.net/man/3/strftime

#colour0 (black)
#colour1 (red)
#colour2 (green)
#colour3 (yellow)
#colour4 (blue)
#colour7 (white)
#colour5 colour6 colour7 colour8 colour9 colour10 colour11 colour12 colour13 colour14 colour15 colour16 colour17

#D ()
#F ()
#H (hostname)
#I (window index)
#P ()
#S (session index)
#T (pane title)
#W (current task; e.g. vim if editing a file in vim or zsh if running zsh)

